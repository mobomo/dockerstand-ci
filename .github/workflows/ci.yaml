name: Build and Push Docker Images

on:
  push:
    branches:
      - 'master'
  #   paths:
  #     - 'PHP7.4/*'
  #     - 'PHP8.0/*'
  #     - 'PHP8.1/*'
  # pull_request:
  #   paths:
  #     - 'PHP7.4/*'
  #     - 'PHP8.0/*'
  #     - 'PHP8.1/*'

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate matrix
        id: set_matrix
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const directories = ['PHP7.4', 'PHP8.0', 'PHP8.1'];
            let matrix = [];

            for (const directory of directories) {
              const files = fs.readdirSync(directory);
              for (const file of files) {
                if (file.startsWith('Dockerfile')) {
                  const variant = file === 'Dockerfile' ? 'latest' : file.replace('Dockerfile.', '');
                  matrix.push({
                    context: directory,
                    dockerfile: file,
                    tag: `${directory}-${variant}`
                  });
                }
              }
            }

            // Set the matrix output to a properly formatted JSON string
            core.setOutput('matrix', JSON.stringify({ include: matrix }));
      - name: Print matrix
        run: echo "${{ steps.set_matrix.outputs.matrix }}"
      - name: Print matrix jsobject
        run: echo "${{ fromJson(steps.set_matrix.outputs.matrix) }}"
  build:
    needs: generate_matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate_matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            --push \
            --tag mobomo/docker-ci:${{ matrix.tag }} \
            --file ${{ matrix.context }}/${{ matrix.dockerfile }} \
            ${{ matrix.context }}